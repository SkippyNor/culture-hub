GET               /admin/dataset                                    @controllers.organization.DataSets.list
GET               /admin/dataset/search                             @controllers.organization.DataSets.listAsTokens(q, formats: Option[String])
GET               /admin/dataset/feed                               @controllers.organization.DataSets.feed(clientId, spec: Option[String])
GET               /admin/dataset/add                                @controllers.organization.DataSetControl.add
GET               /admin/dataset/:spec/update                       @controllers.organization.DataSetControl.update(spec: String)
POST              /admin/dataset/submit                             @controllers.organization.DataSetControl.dataSetSubmit
POST              /admin/dataset/import                             @controllers.organization.DataSetImport.importSIP(userName: Option[String])
GET               /admin/dataset/:spec                              @controllers.organization.DataSets.dataSet(spec: String)
GET               /admin/sip-creator                                @controllers.organization.DataSets.sipCreator

GET               /api/sip-creator/list                             @controllers.dataset.SipCreatorEndPoint.listAll(accessKey: Option[String])
GET               /api/sip-creator/unlock/:orgId/:spec              @controllers.dataset.SipCreatorEndPoint.unlock(orgId, spec, accessKey: Option[String])
POST              /api/sip-creator/submit/:orgId/:spec/*fileName    @controllers.dataset.SipCreatorEndPoint.acceptFile(orgId, spec, fileName, accessKey: Option[String])
POST              /api/sip-creator/submit/:orgId/:spec              @controllers.dataset.SipCreatorEndPoint.acceptFileList(orgId, spec, accessKey: Option[String])
GET               /api/sip-creator/fetch/:orgId/:spec-sip.zip       @controllers.dataset.SipCreatorEndPoint.fetchSIP(orgId, spec, accessKey: Option[String])

GET               /assets/*file                                     controllers.dataset.Assets.at(path="/public", file)
